[{"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/index.js":"1","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/reportWebVitals.js":"2","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/index.js":"3","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Login.js":"4","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Profile.js":"5","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Posts.js":"6","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Messageform.js":"7","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/App.js":"8","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Register.js":"9","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Search.js":"10","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Logout.js":"11","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Title.js":"12","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/api/index.js":"13","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/NewPost.js":"14","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Header.js":"15","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/HeaderButton.js":"16"},{"size":242,"mtime":1673129116122,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1672794613504,"results":"19","hashOfConfig":"18"},{"size":1011,"mtime":1673138048903,"results":"20","hashOfConfig":"18"},{"size":3835,"mtime":1673136733541,"results":"21","hashOfConfig":"18"},{"size":2130,"mtime":1673138363569,"results":"22","hashOfConfig":"18"},{"size":4415,"mtime":1673136742650,"results":"23","hashOfConfig":"18"},{"size":976,"mtime":1673137495276,"results":"24","hashOfConfig":"18"},{"size":2846,"mtime":1673140299161,"results":"25","hashOfConfig":"18"},{"size":4980,"mtime":1673140538651,"results":"26","hashOfConfig":"18"},{"size":1257,"mtime":1673136770090,"results":"27","hashOfConfig":"18"},{"size":551,"mtime":1673112338629,"results":"28","hashOfConfig":"18"},{"size":430,"mtime":1673128762574,"results":"29","hashOfConfig":"18"},{"size":3596,"mtime":1673128963445,"results":"30","hashOfConfig":"18"},{"size":3055,"mtime":1673136723490,"results":"31","hashOfConfig":"18"},{"size":867,"mtime":1673136700094,"results":"32","hashOfConfig":"18"},{"size":633,"mtime":1673136693099,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u6bdd0",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/index.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/reportWebVitals.js",[],[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/index.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Login.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Profile.js",["87","88"],[],"import React, { useState, useEffect } from \"react\";\n// import { connectProfile, getUser } from \"./index\";\nimport MessageForm from \"./Messageform\";\n\nimport { Link } from \"react-router-dom\";\nimport { connectProfile } from \"../api\";\n\nexport default function Profile() {\n  let token = \"\";\n  const [myInfo, setMyInfo] = useState({});\n  useEffect(() => {\n    token = localStorage.getItem(\"token\");\n    async function getMyInfo() {\n      const response = await connectProfile(token);\n      setMyInfo(response);\n    }\n    getMyInfo();\n  }, []);\n  const myInfoMapping =\n    myInfo.data && myInfo.data.messages && myInfo.data.messages.length ? (\n      myInfo.data.messages.map((element, index) => {\n        return (\n          <div key={`Profile${index}`}>\n            <div className=\"card\" style={{ width: 700 }}>\n              <div className=\"card-body\">\n                <div id=\"inboxMessage\">\n                  <h4>From: {element.fromUser.username}</h4>\n                  <h4>Response to Post: {element.post.title}</h4>\n                  <h4>Message: {element.content}</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      })\n    ) : (\n      <h2>No messages to display</h2>\n    );\n\n  return (\n    <div id=\"postBorder\">\n      {myInfo.data ? (\n        <h1 className=\"display-4\"> Welcome {myInfo.data.username} </h1>\n      ) : (\n        <h1>Please Login</h1>\n      )}\n      <hr></hr>\n      <Link to=\"/NewPost\">\n        <button id=\"allButton\" type=\"button\" className=\"btn btn-dark\">\n          Create New Post\n        </button>\n      </Link>\n      <Link to=\"/Posts\">\n        <button id=\"allButton\" type=\"button\" className=\"btn btn-dark\">\n          View All Posts\n        </button>\n      </Link>\n\n      <Link to=\"/Logout\">\n        <button\n          id=\"allButton\"\n          type=\"button\"\n          className=\"btn btn-dark\"\n          onClick={() => {\n            localStorage.removeItem(\"token\");\n          }}\n        >\n          Log Out\n        </button>\n      </Link>\n      <p className=\"h2\">Message Inbox:</p>\n      <div id=\"messageBox\">{myInfoMapping}</div>\n      <hr></hr>\n    </div>\n  );\n}\n","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Posts.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Messageform.js",["89","90"],[],"import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendMessage } from \"../api/index\";\n\nexport default function MessageForm(props) {\n  const { postId } = props;\n\n  const navigate = useNavigate();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const content = event.target[0].value;\n    const token = localStorage.getItem(\"token\");\n    sendMessage(token, postId, content);\n    navigate(\"/Profile\");\n  };\n  return (\n    <form onSubmit={handleSubmit} id=\"messageForm\">\n      <div className=\"input-group\">\n        <label id=\"messageForm\">Direct Message: </label>\n        <input\n          id=\"messageInput\"\n          type=\"text\"\n          placeholder=\" Questions? Write Here!\"\n          aria-label=\"Search\"\n          aria-describedby=\"search-addon\"\n        ></input>\n        <button id=\"submitButton\" className=\"btn btn-outline-dark\">\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/App.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Register.js",["91"],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Search.js",["92"],[],"import React, { useState } from \"react\";\nimport { getPosts } from \"../api/index\";\n\nexport default function Search({ posts, setPosts, getPosts }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const postMatches = (post, text) => {\n    const review = post.title.includes(text);\n    return review;\n  };\n  const handleSubmit = () => {\n    const filteredPosts = posts.filter((post) => postMatches(post, searchTerm));\n    setPosts(filteredPosts);\n    if (searchTerm.length) {\n      getPosts();\n    }\n  };\n  return (\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <form\n          id=\"searchBar\"\n          onSubmit={(event) => {\n            event.preventDefault();\n            handleSubmit();\n          }}\n          className=\"d-flex input-group w-auto\"\n        >\n          <label>Search Through Posts: </label>\n          <input\n            type=\"search\"\n            className=\"form-control rounded\"\n            placeholder=\"Search\"\n            id=\"messageInput\"\n            aria-label=\"Search\"\n            aria-describedby=\"search-addon\"\n            value={searchTerm}\n            onChange={(event) => setSearchTerm(event.target.value)}\n          ></input>\n        </form>\n      </div>\n    </nav>\n  );\n}\n","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Logout.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Title.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/api/index.js",["93","94"],[],"export const cohortName = \"2209-ftb-et-web-pt\";\nexport const BASE_URL = `https://strangers-things.herokuapp.com/api/`;\n\nexport async function getPosts() {\n  try {\n    const data = await fetch(`${BASE_URL}${cohortName}/posts`);\n    const result = await data.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function addPosts(postDetail, token) {\n  const response = await fetch(`${BASE_URL}${cohortName}/posts`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify({\n      post: {\n        title: postDetail.title,\n        description: postDetail.description,\n        location: postDetail.location,\n        price: postDetail.price,\n        willDeliver: postDetail.willDeliver,\n      },\n    }),\n  })\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result);\n    })\n    .catch(console.error);\n}\n\nexport async function loginUser(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}${cohortName}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n        },\n      }),\n    });\n    const result = await response.json();\n    const token = result.data.token;\n    return token;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function connectProfile(token) {\n  const response = await fetch(`${BASE_URL}${cohortName}/users/me`, {\n    headers: {\n      \"Content-Type\": \"application.json\",\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  const result = await response.json();\n  return result;\n}\n\nexport async function getUser(authToken) {\n  try {\n    const userData = {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${authToken}`,\n    };\n    const response = await fetch(`${BASE_URL}${cohortName}/users/me`, {\n      headers: userData,\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function createUser(username, password) {\n  try {\n    console.log(`${BASE_URL}${cohortName}/users/register`);\n    const response = await fetch(`${BASE_URL}${cohortName}/users/Register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n        },\n      }),\n    });\n    return response;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function deletePosts(token, postid) {\n  try {\n    const response = await fetch(`${BASE_URL}${cohortName}/posts/${postid}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.error(\"Isssue deleting Posts\", error);\n  }\n}\n\nexport async function sendMessage(token, postid, content) {\n  const response = await fetch(\n    `${BASE_URL}${cohortName}/posts/${postid}/messages`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        message: {\n          content: content,\n        },\n      }),\n    }\n  )\n    .then((response) => response.json())\n    .then((result) => {\n      console.log(result, \"this is result for sendMessage\");\n    })\n    .catch(console.error);\n}\n","/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/NewPost.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/Header.js",[],[],"/Users/safirtrew/Desktop/Strangers_Things/my-app/src/components/HeaderButton.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":12,"column":13,"nodeType":"101","endLine":12,"endColumn":42},{"ruleId":"95","severity":1,"message":"102","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"103","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"104","line":13,"column":10,"nodeType":"97","messageId":"98","endLine":13,"endColumn":25},{"ruleId":"95","severity":1,"message":"105","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":18},{"ruleId":"95","severity":1,"message":"106","line":15,"column":9,"nodeType":"97","messageId":"98","endLine":15,"endColumn":17},{"ruleId":"95","severity":1,"message":"106","line":125,"column":9,"nodeType":"97","messageId":"98","endLine":125,"endColumn":17},"no-unused-vars","'MessageForm' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'token' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useEffect' is defined but never used.","'useState' is defined but never used.","'confirmPassword' is assigned a value but never used.","'getPosts' is defined but never used.","'response' is assigned a value but never used."]